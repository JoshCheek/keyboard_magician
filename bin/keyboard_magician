#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path '../../lib', __FILE__

require 'keyboard_magician/console'
require 'time'

include KeyboardMagician

if $stdin.tty?
  system "stty raw"   # feed characters straight through to the program
  system "tput civis" # hide the cursor
end

begin
  target_string = 'The quick brown fox jumped over the lazy dog.'
  start_time    = Time.now
  user_input    = UserInput.new []
  keys          = []
  game_stats    = nil

  loop do
    # eventually, this should turn into something smarter
    # probably moving the current char along, which will fix the cursor
    # and turn each input into a 1 or 2 character change instead of having
    # to rewrite the string each time
    progress_ary = Progress.call(target_string, user_input.to_s)
    print Console::ScreenProgress.call(progress_ary)
    print "\r"
    game_stats = GameStats.new target_string: target_string,
                               input_string:  user_input.to_s,
                               seconds_taken: Time.now-start_time
    break if game_stats.over?
    raw_char   = Console::ParseKey.call($stdin.getc)
    keys       << Key.new(*raw_char)
    user_input = UserInput.new keys
  end
ensure
  if $stdin.tty?
    system "stty -raw"  # back to normal character processing
    system "tput cnorm" # show the cursor
  end
end

puts "\e[0m"
puts "Game Stats"
puts "=========="
puts "time taken:            #{game_stats.seconds_taken.inspect}"
puts "characters per second: #{game_stats.cps}"
puts "words per minute:      #{game_stats.wpm}"
puts "num errors:            #{game_stats.num_errors}"
